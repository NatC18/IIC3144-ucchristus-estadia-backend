# Generated by Django 5.2.7 on 2025-10-17 18:14

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import api.models.paciente
import api.models.usuario


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Cama",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("codigo_cama", models.CharField(max_length=20)),
                ("habitacion", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Cama",
                "verbose_name_plural": "Camas",
                "db_table": "camas",
                "ordering": ["codigo_cama"],
            },
        ),
        migrations.CreateModel(
            name="Paciente",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rut",
                    models.CharField(
                        help_text="Formato: XX.XXX.XXX-X",
                        max_length=12,
                        unique=True,
                        validators=[api.models.paciente.validar_rut],
                    ),
                ),
                ("nombre", models.CharField(max_length=200)),
                (
                    "sexo",
                    models.CharField(
                        choices=[("M", "Hombre"), ("F", "Mujer"), ("O", "Otro")],
                        max_length=1,
                    ),
                ),
                ("fecha_nacimiento", models.DateField()),
                ("prevision_1", models.CharField(blank=True, max_length=20, null=True)),
                ("prevision_2", models.CharField(blank=True, max_length=20, null=True)),
                ("convenio", models.CharField(blank=True, max_length=100, null=True)),
                ("score_social", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Paciente",
                "verbose_name_plural": "Pacientes",
                "db_table": "pacientes",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Servicio",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("codigo", models.CharField(max_length=100)),
                ("descripcion", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Servicio",
                "verbose_name_plural": "Servicios",
                "db_table": "servicios",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Correo electrónico"
                    ),
                ),
                (
                    "rut",
                    models.CharField(
                        help_text="Formato: XX.XXX.XXX-X",
                        max_length=12,
                        unique=True,
                        validators=[api.models.usuario.validar_rut_chileno],
                    ),
                ),
                ("nombre", models.CharField(max_length=100, verbose_name="Nombre")),
                ("apellido", models.CharField(max_length=100, verbose_name="Apellido")),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrador"),
                            ("MEDICO", "Médico"),
                            ("ENFERMERO", "Enfermero/a"),
                            ("RECEPCION", "Recepción"),
                            ("OTRO", "Otro"),
                        ],
                        default="OTRO",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "usuarios",
                "ordering": ["apellido", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="Episodio",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("episodio_cmbd", models.IntegerField()),
                ("fecha_ingreso", models.DateTimeField()),
                ("fecha_egreso", models.DateTimeField(blank=True, null=True)),
                ("tipo_actividad", models.CharField(max_length=100)),
                (
                    "inlier_outlier_flag",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "especialidad",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("estancia_prequirurgica", models.FloatField(blank=True, null=True)),
                ("estancia_postquirurgica", models.FloatField(blank=True, null=True)),
                ("estancia_norma_grd", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cama",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="episodios",
                        to="api.cama",
                    ),
                ),
                (
                    "paciente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="episodios",
                        to="api.paciente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Episodio",
                "verbose_name_plural": "Episodios",
                "db_table": "episodios",
                "ordering": ["fecha_ingreso"],
            },
        ),
        migrations.CreateModel(
            name="Gestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo_gestion",
                    models.CharField(
                        choices=[
                            ("HOMECARE_UCCC", "Homecare UCCC"),
                            ("HOMECARE", "Homecare"),
                            ("TRASLADO", "Traslado"),
                            (
                                "ACTIVACION_BENEFICIO_ISAPRE",
                                "Activación Beneficio Isapre",
                            ),
                            (
                                "AUTORIZACION_PROCEDIMIENTO",
                                "Autorización Procedimiento",
                            ),
                            ("COBERTURA", "Cobertura"),
                            ("CORTE_CUENTAS", "Corte Cuentas"),
                            (
                                "EVALUACION_OTRO_FINANCIAMIENTO",
                                "Evaluación de otro financiamiento",
                            ),
                            (
                                "ACTUALIZACION_ESTADO_PACIENTE",
                                "Actualización de estado paciente solicitado por prestadores",
                            ),
                            (
                                "ASIGNACION_CENTRO_DIALISIS",
                                "Asignación de Centro de Dialisis",
                            ),
                            ("MANEJO_AMBULATORIO", "Manejo ambulatorio"),
                            (
                                "INGRESO_CUIDADOS_PALIATIVOS",
                                "Ingreso de Cuidados Paliativos",
                            ),
                            (
                                "EVALUACION_BENEFICIO_GESTION_INTERNA",
                                "Evaluación de beneficio gestión interna",
                            ),
                            ("GESTION_CLINICA", "Gestión Clínica"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "estado_gestion",
                    models.CharField(
                        choices=[
                            ("INICIADA", "Iniciada"),
                            ("EN_PROGRESO", "En Progreso"),
                            ("COMPLETADA", "Completada"),
                            ("CANCELADA", "Cancelada"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fecha_inicio", models.DateTimeField()),
                ("fecha_fin", models.DateTimeField(blank=True, null=True)),
                ("informe", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "episodio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gestiones",
                        to="api.episodio",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gestiones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Gestion",
                "verbose_name_plural": "Gestiones",
                "db_table": "gestiones",
                "ordering": ["fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="EpisodioServicio",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("fecha", models.DateTimeField()),
                ("tipo", models.CharField(max_length=20)),
                ("orden_traslado", models.IntegerField(blank=True, null=True)),
                (
                    "episodio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="servicios",
                        to="api.episodio",
                    ),
                ),
                (
                    "servicio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="episodios",
                        to="api.servicio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Episodio Servicio",
                "verbose_name_plural": "Episodios Servicio",
                "db_table": "episodios_servicio",
                "ordering": ["fecha"],
            },
        ),
        migrations.CreateModel(
            name="Transferencia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("estado", models.CharField(max_length=25)),
                ("motivo_cancelacion", models.TextField(blank=True, null=True)),
                ("motivo_rechazo", models.TextField(blank=True, null=True)),
                ("tipo_traslado", models.CharField(max_length=50)),
                ("motivo_traslado", models.CharField(max_length=50)),
                ("centro_destinatario", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gestion",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transferencia",
                        to="api.gestion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transferencia",
                "verbose_name_plural": "Transferencias",
                "db_table": "transferencias",
                "ordering": ["estado"],
            },
        ),
    ]
