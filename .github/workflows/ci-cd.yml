name: Backend CI/CD

on:
  push:
    branches: [main, develop, clean-backend]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Wait for PostgreSQL
        run: |
          while ! pg_isready -h localhost -p 5432 > /dev/null 2> /dev/null; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done
          
      - name: Run migrations
        run: python manage.py migrate
        env:
          DEBUG: True
          SECRET_KEY: test-secret-key-not-for-production
          DB_HOST: localhost
          DB_NAME: test_db
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_PORT: 5432
          
      - name: Run tests
        run: python manage.py test --verbosity=2
        env:
          DEBUG: True
          SECRET_KEY: test-secret-key-not-for-production
          DB_HOST: localhost
          DB_NAME: test_db
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_PORT: 5432

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          
      - name: Run linting
        run: |
          echo "Running flake8..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=venv,.git
          echo "Checking import sorting..."
          isort . --check-only --diff --profile black --skip=venv
          echo "Checking code formatting..."
          black . --check --exclude="venv"

  deploy:
    name: Deploy to Render
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true